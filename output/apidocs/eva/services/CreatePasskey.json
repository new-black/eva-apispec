{
  "name": "CreatePasskey",
  "method": "POST",
  "path": "/message/CreatePasskey",
  "description": "After having called \u0060GetPasskeyChallenge\u0060 to obtain a challenge and some information from the server, and after pushing that through WebAuthn using \u0060navigator.credentials.create\u0060,\nyou extract information from the generated credential and send it back to the server for storage.\n\n1. The \u0060Challenge\u0060 matching the one originally provided through \u0060GetPasskeyChallenge\u0060\n2. The \u0060PublicKey\u0060 generated (base64 encoded)\n3. The \u0060AuthenticatorData\u0060 generated (base64 encoded)\n\nThe creation will succeed if the \u0060Challenge\u0060 matches the one we created for you and all the data checks out, after which you can use your new key to log in!\n\nWhen you want to log in, simply call \u0060Login\u0060 using \u0060CustomAuthenticatorType\u0060 set to \u0022Passkey\u0022 and it will reply with a challenge and some information inside the\n\u0060CustomAuthenticateResponseData\u0060 property, which you can push through WebAuthn using \u0060navigator.credentials.get\u0060 to sign that challenge with your private key. Exact the information\nfrom the generated credential and call \u0060Login\u0060 again with the same \u0060CustomAuthenticatorType\u0060, but this time include \u0060CustomAuthenticateData\u0060 with an object of type\n\u0060PasskeyAuthenticateMessage\u0060 containing;\n\n- The \u0060ID\u0060 as the \u0022rawId\u0022 of the used credential (base64 encoded)\n- The \u0060Signature\u0060 that was created to sign the challenge (base64 encoded)\n- The \u0060ClientData\u0060 to include some client information (base64 encoded json)\n- The \u0060AuthenticatorData\u0060 to include some authenticator data (base64 encoded)\n\nIf this all checks out, you\u0027re logged in! As with every \u0060Login\u0060, be sure to specify user types and organization units of your preference.",
  "auth_description": "Requires a user of type \u0060Employee\u0060 or \u0060Customer\u0060 or \u0060Api\u0060",
  "headers": [
    {
      "name": "EVA-User-Agent",
      "type": "string",
      "description": "The user agent that is making these calls. Don\u0027t make this specific per device/browser but per application. This should be of the form: \u0060MyFirstUserAgent/1.0.0\u0060",
      "required": true,
      "default": null
    },
    {
      "name": "EVA-Requested-OrganizationUnitID",
      "type": "integer",
      "description": "The ID of the organization unit to run this request in.",
      "required": false,
      "default": null
    },
    {
      "name": "EVA-Requested-OrganizationUnit-Query",
      "type": "string",
      "description": "The query that selects the organization unit to run this request in.",
      "required": false,
      "default": null
    }
  ],
  "request_samples": [
    {
      "name": "JSON",
      "sample": "{\n  \u0022AuthenticatorData\u0022: \u0022string\u0022,\n  \u0022Challenge\u0022: \u0022string\u0022,\n  \u0022PublicKey\u0022: \u0022string\u0022\n}",
      "syntax": "json"
    },
    {
      "name": "CURL",
      "sample": "curl -H \u0022Content-Type: application/json\u0022 \\\n  -H \u0022EVA-User-Agent: MyFirstUserAgent/1.0.0\u0022 \\\n  -H \u0022Authorization: Bearer \u003Ctoken\u003E\u0022 \\\n  --data \u0027{\n  \u0022AuthenticatorData\u0022: \u0022string\u0022,\n  \u0022Challenge\u0022: \u0022string\u0022,\n  \u0022PublicKey\u0022: \u0022string\u0022\n}\u0027 \\\n  https://euw.acme.test.eva-online.cloud/message/CreatePasskey",
      "syntax": "bash"
    }
  ],
  "response_samples": [
    {
      "name": "200",
      "sample": "{}"
    },
    {
      "name": "400",
      "sample": "{\n  \u0022Error\u0022: {\n    \u0022Code\u0022: \u0022COVFEFE\u0022,\n    \u0022Type\u0022: \u0022RequestValidationFailure\u0022,\n    \u0022Message\u0022: \u0022Validation of the request message failed: Field ABC has an invalid value for a Product.\u0022,\n    \u0022RequestID\u0022: \u0022576b62dd71894e3281a4d84951f44e70\u0022\n  }\n}"
    },
    {
      "name": "403",
      "sample": "{\n  \u0022Error\u0022: {\n    \u0022Code\u0022: \u0022COVFEFE\u0022,\n    \u0022Type\u0022: \u0022Forbidden\u0022,\n    \u0022Message\u0022: \u0022You are not authorized to execute this request.\u0022,\n    \u0022RequestID\u0022: \u0022576b62dd71894e3281a4d84951f44e70\u0022\n  }\n}"
    }
  ],
  "deprecation_notice": null,
  "request_type_id": "B",
  "response_type_id": "C",
  "types": {
    "B": [
      {
        "name": "AuthenticatorData",
        "deprecation_notice": null,
        "description": "",
        "type": "string",
        "required": true,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Challenge",
        "deprecation_notice": null,
        "description": "",
        "type": "string",
        "required": true,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "PublicKey",
        "deprecation_notice": null,
        "description": "",
        "type": "string",
        "required": true,
        "properties_id": null,
        "one_of": null
      }
    ],
    "D": [
      {
        "name": "Code",
        "deprecation_notice": null,
        "description": "A unique ID identifying this error.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Data",
        "deprecation_notice": null,
        "description": "",
        "type": "any | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Message",
        "deprecation_notice": null,
        "description": "A human-readable message describing the error.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "RequestID",
        "deprecation_notice": null,
        "description": "A unique ID identifying the request. Please provide this ID when contacting support.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Type",
        "deprecation_notice": null,
        "description": "A short description of the error type.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "E": [
      {
        "name": "ExternalIDs",
        "deprecation_notice": null,
        "description": "When using the \u0060ExternalIDs\u0060 mode, this will hold the resolved external IDs.",
        "type": "map[map[string]] | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "IsAsyncResultAvailable",
        "deprecation_notice": null,
        "description": "This is a flag indicating whether the async request is done. If it is \u0060null\u0060, it is not an async service. If it is \u0060false\u0060, the response is not yet available. Do not process the properties in that case. It is is \u0060true\u0060 the properties are filled with the result of the call.",
        "type": "boolean | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "UnresolvedExternalIDs",
        "deprecation_notice": null,
        "description": "When using the \u0060ExternalIDs\u0060 mode, this will hold the external IDs we couldn\u0027t resolve.",
        "type": "map[array[string]] | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "C": [
      {
        "name": "Error",
        "deprecation_notice": null,
        "description": "",
        "type": "object | null",
        "required": false,
        "properties_id": "D",
        "one_of": null
      },
      {
        "name": "Metadata",
        "deprecation_notice": null,
        "description": "",
        "type": "object | null",
        "required": false,
        "properties_id": "E",
        "one_of": null
      }
    ]
  }
}