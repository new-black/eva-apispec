{
  "name": "CreateBlob",
  "method": "POST",
  "path": "/message/CreateBlob",
  "description": "Creates a new, empty blob. If you wish to store data in there directly, use the \u0060StoreBlob\u0060 service instead.\n\nEmpty blobs are placeholders; eventually, you\u0027ll want to push data in there. This service allows you to create that placeholder, and it is expected you then use the\nmultipart or raw binary \u0060POST\u0060 call to \u0060/blob/{Guid}\u0060 to push your data.\n\nThe combination of \u0060Category\u0060 and \u0060OriginalName\u0060 must be unique, as the \u0060GetBlobInfoService\u0060 allows retrieval based on these values. Internally, a fresh and unique \u0060Guid\u0060 is\ngenerated and returned from this request. The response also contains the full \u0060Url\u0060 by which this blob can be accessed (which will contain aforementioned \u0060Guid\u0060). Use this\npath to POST your data, too!\n\n- [x] The \u0060MimeType\u0060 is required, a few suggestions would be \u0060application/pdf\u0060, \u0060text/csv\u0060 or \u0060application/json\u0060 - but you probably already know this.\n- [x] The \u0060ExpireDate\u0060 is the date at which the given blob should expire. Leave this empty to *suggest* to keep it forever. We will bag it and get rid of it when the time is right. :hocho:\n\nWhen retrieving the blob, it will be returned to you using the \u0060MimeType\u0060 as \u0060ContentType\u0060 header and a proper \u0060Expires\u0060 header.",
  "auth_description": "Requires a user of type \u0060Employee\u0060 or \u0060Customer\u0060 or \u0060Api\u0060",
  "headers": [
    {
      "name": "EVA-User-Agent",
      "type": "string",
      "description": "The user agent that is making these calls. Don\u0027t make this specific per device/browser but per application. This should be of the form: \u0060MyFirstUserAgent/1.0.0\u0060",
      "required": true,
      "default": null
    },
    {
      "name": "EVA-Requested-OrganizationUnitID",
      "type": "integer",
      "description": "The ID of the organization unit to run this request in.",
      "required": false,
      "default": null
    },
    {
      "name": "EVA-Requested-OrganizationUnit-Query",
      "type": "string",
      "description": "The query that selects the organization unit to run this request in.",
      "required": false,
      "default": null
    }
  ],
  "request_samples": [
    {
      "name": "JSON",
      "sample": "{\n  \u0022Category\u0022: \u0022string\u0022,\n  \u0022ExpireDate\u0022: \u00222024-12-16\u0022,\n  \u0022LocationType\u0022: \u0022string\u0022,\n  \u0022MimeType\u0022: \u0022string\u0022,\n  \u0022OriginalName\u0022: \u0022string\u0022,\n  \u0022Uri\u0022: \u0022string\u0022\n}",
      "syntax": "json"
    },
    {
      "name": "CURL",
      "sample": "curl -H \u0022Content-Type: application/json\u0022 \\\n  -H \u0022EVA-User-Agent: MyFirstUserAgent/1.0.0\u0022 \\\n  -H \u0022Authorization: Bearer \u003Ctoken\u003E\u0022 \\\n  --data \u0027{\n  \u0022Category\u0022: \u0022string\u0022,\n  \u0022ExpireDate\u0022: \u00222024-12-16\u0022,\n  \u0022LocationType\u0022: \u0022string\u0022,\n  \u0022MimeType\u0022: \u0022string\u0022,\n  \u0022OriginalName\u0022: \u0022string\u0022,\n  \u0022Uri\u0022: \u0022string\u0022\n}\u0027 \\\n  https://euw.acme.test.eva-online.cloud/message/CreateBlob",
      "syntax": "bash"
    }
  ],
  "response_samples": [
    {
      "name": "200",
      "sample": "{\n  \u0022Guid\u0022: \u0022e6a56eef-a011-44d1-be3b-185e59dbea82\u0022,\n  \u0022Url\u0022: \u0022string\u0022\n}"
    },
    {
      "name": "400",
      "sample": "{\n  \u0022Error\u0022: {\n    \u0022Code\u0022: \u0022COVFEFE\u0022,\n    \u0022Type\u0022: \u0022RequestValidationFailure\u0022,\n    \u0022Message\u0022: \u0022Validation of the request message failed: Field ABC has an invalid value for a Product.\u0022,\n    \u0022RequestID\u0022: \u0022576b62dd71894e3281a4d84951f44e70\u0022\n  }\n}"
    },
    {
      "name": "403",
      "sample": "{\n  \u0022Error\u0022: {\n    \u0022Code\u0022: \u0022COVFEFE\u0022,\n    \u0022Type\u0022: \u0022Forbidden\u0022,\n    \u0022Message\u0022: \u0022You are not authorized to execute this request.\u0022,\n    \u0022RequestID\u0022: \u0022576b62dd71894e3281a4d84951f44e70\u0022\n  }\n}"
    }
  ],
  "deprecation_notice": null,
  "request_type_id": "B",
  "response_type_id": "C",
  "types": {
    "B": [
      {
        "name": "Category",
        "deprecation_notice": null,
        "description": "",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "ExpireDate",
        "deprecation_notice": null,
        "description": "",
        "type": "datetime | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "LocationType",
        "deprecation_notice": null,
        "description": "",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "MimeType",
        "deprecation_notice": null,
        "description": "",
        "type": "string",
        "required": true,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "OriginalName",
        "deprecation_notice": null,
        "description": "",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Uri",
        "deprecation_notice": null,
        "description": "",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "D": [
      {
        "name": "Code",
        "deprecation_notice": null,
        "description": "A unique ID identifying this error.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Data",
        "deprecation_notice": null,
        "description": "",
        "type": "any | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Message",
        "deprecation_notice": null,
        "description": "A human-readable message describing the error.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "RequestID",
        "deprecation_notice": null,
        "description": "A unique ID identifying the request. Please provide this ID when contacting support.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Type",
        "deprecation_notice": null,
        "description": "A short description of the error type.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "E": [
      {
        "name": "ExternalIDs",
        "deprecation_notice": null,
        "description": "When using the \u0060ExternalIDs\u0060 mode, this will hold the resolved external IDs.",
        "type": "map[map[string]] | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "IsAsyncResultAvailable",
        "deprecation_notice": null,
        "description": "This is a flag indicating whether the async request is done. If it is \u0060null\u0060, it is not an async service. If it is \u0060false\u0060, the response is not yet available. Do not process the properties in that case. It is is \u0060true\u0060 the properties are filled with the result of the call.",
        "type": "boolean | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "UnresolvedExternalIDs",
        "deprecation_notice": null,
        "description": "When using the \u0060ExternalIDs\u0060 mode, this will hold the external IDs we couldn\u0027t resolve.",
        "type": "map[array[string]] | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "C": [
      {
        "name": "Error",
        "deprecation_notice": null,
        "description": "",
        "type": "object | null",
        "required": false,
        "properties_id": "D",
        "one_of": null
      },
      {
        "name": "Guid",
        "deprecation_notice": null,
        "description": "The ID of the newly created blob.\n\nThis is the ID of a \u0060Blob\u0060",
        "type": "guid",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Metadata",
        "deprecation_notice": null,
        "description": "",
        "type": "object | null",
        "required": false,
        "properties_id": "E",
        "one_of": null
      },
      {
        "name": "Url",
        "deprecation_notice": null,
        "description": "The URL where the newly created blob can be accessed.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ]
  }
}