{
  "typename": "GetDigitalGiftCardsForOrder",
  "assembly": "EVA.Core",
  "description": "Retrieve the GiftCard data for a specific order, based on given \u0060OrderID\u0060. This order needs to be visible for the current user.\n\nWill return a list of \u0060GiftCard\u0060 data, for every orderline with a GiftCard. Will return the same data supplied in the \u0060AddGiftCardToOrder\u0060\nservice. When the order was shipped (automatically when it is fully paid), the details \u0060GiftCardNumber\u0060 and\n\u0060Pin\u0060 are also included. An additional property \u0060IsAvailable\u0060 let\u0027s you check if it was indeed shipped and paid.\n\nThe \u0060GiftCardID\u0060 returned on the GiftCard is it\u0027s unique identifier, to be used in conjunction with the \u0060AccessToken\u0060 to make it globally\nunique. Using the \u0060AccessToken\u0060 and \u0060GiftCardID\u0060, we are pretty sure you are allowed to see the GiftCard data. Use this data to build the link\nto share directly, or use the approperiate services to mail/text/print this.\n\nAdditionally, this service can be called with an \u0060AccessToken\u0060 and \u0060GiftCardID\u0060 combination, as explained above. In this case, no user validation\nis done - you know both keys to the GiftCard, so you are allowed to get it\u0027s information.",
  "usage": {
    "request": true,
    "response": false
  },
  "enumIsFlag": null,
  "typeArguments": [],
  "typeDependencies": [
    "EVA.Core.RequestMessage\u00601",
    "EVA.Core.GiftCards.GetDigitalGiftCardsForOrderResponse"
  ],
  "extends": {
    "ref": "EVA.Core.RequestMessage\u00601",
    "args": [
      {
        "ref": "EVA.Core.GiftCards.GetDigitalGiftCardsForOrderResponse",
        "args": [],
        "shared": null,
        "nullable": true
      }
    ],
    "shared": null,
    "nullable": false
  },
  "properties": {
    "AccessToken": {
      "type": {
        "ref": "string",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "GiftCardID": {
      "type": {
        "ref": "string",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "OrderID": {
      "type": {
        "ref": "id",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": {
        "name": "Order",
        "lenient": false,
        "supportsCustomID": true,
        "supportsSystemID": true,
        "isEvaID": true,
        "isExternalID": false
      },
      "allowedValues": []
    }
  },
  "enumValues": {},
  "parent": null
}