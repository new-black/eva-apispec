{
  "typename": "ListAvailableUserTasks",
  "assembly": "EVA.Core",
  "description": "List the available UserTasks for the current user.\n\nThe response has a \u0060Aggregations\u0060 property. This property contains the available filters for this set of UserTasks.\nTo apply such a filter it should added in the \u0060Filters\u0060 property on the RequestMessage.\n\nExample response:\n\u0060\u0060\u0060\n{\n...\n,\n  \u0022Aggregations\u0022: {\n      \u0022ZonedCycleCountPreCount\u0022: {\n        \u0022CycleCountZoneID\u0022: [\n          {\n            \u0022Name\u0022: \u0022Shelves\u0022,\n            \u0022Value\u0022: 10,\n            \u0022Count\u0022: 1\n          },\n          {\n            \u0022Name\u0022: \u0022Stockroom\u0022,\n            \u0022Value\u0022: 12,\n            \u0022Count\u0022: 6\n          },\n          {\n            \u0022Name\u0022: \u0022Store\u0022,\n            \u0022Value\u0022: 13,\n            \u0022Count\u0022: 4\n          }\n        ]\n      }\n    }\n  }\n}\n\u0060\u0060\u0060\n\nTo apply a matching filter:\n\u0060\u0060\u0060\n{\n  \u0022Filters\u0022: {\n    \u0022ZonedCycleCountPreCount\u0022: {\n      \u0022CycleCountZoneID\u0022: [10]\n    }\n  }\n}\n\u0060\u0060\u0060",
  "usage": {
    "request": true,
    "response": false
  },
  "enumIsFlag": null,
  "typeArguments": [],
  "typeDependencies": [
    "EVA.Core.RequestMessage\u00601",
    "EVA.Core.Services.ListAvailableUserTasksResponse"
  ],
  "extends": {
    "ref": "EVA.Core.RequestMessage\u00601",
    "args": [
      {
        "ref": "EVA.Core.Services.ListAvailableUserTasksResponse",
        "args": [],
        "shared": null,
        "nullable": true
      }
    ],
    "shared": null,
    "nullable": false
  },
  "properties": {
    "Filters": {
      "type": {
        "ref": "map",
        "args": [
          {
            "ref": "string",
            "args": [],
            "shared": null,
            "nullable": true
          },
          {
            "ref": "map",
            "args": [
              {
                "ref": "string",
                "args": [],
                "shared": null,
                "nullable": true
              },
              {
                "ref": "array",
                "args": [
                  {
                    "ref": "any",
                    "args": [],
                    "shared": null,
                    "nullable": true
                  }
                ],
                "shared": null,
                "nullable": true
              }
            ],
            "shared": null,
            "nullable": true
          }
        ],
        "shared": null,
        "nullable": true
      },
      "description": "Filter for a specific UserTaskType.Name using a property name and a list of values.",
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "IsStarted": {
      "type": {
        "ref": "bool",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": "Return only Started/Open UserTasks",
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "Labels": {
      "type": {
        "ref": "array",
        "args": [
          {
            "ref": "string",
            "args": [],
            "shared": null,
            "nullable": true
          }
        ],
        "shared": null,
        "nullable": true
      },
      "description": "Return only UserTasks with one of the specified labels",
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "UserID": {
      "type": {
        "ref": "id",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": "Return only UserTasks attached to this UserID",
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": {
        "name": "User",
        "lenient": false,
        "supportsCustomID": true,
        "supportsSystemID": true,
        "isEvaID": true,
        "isExternalID": false
      },
      "allowedValues": []
    },
    "UserTaskSubTypes": {
      "type": {
        "ref": "array",
        "args": [
          {
            "ref": "string",
            "args": [],
            "shared": null,
            "nullable": true
          }
        ],
        "shared": null,
        "nullable": true
      },
      "description": "Return only UserTasks with one of the specified subtypes",
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "UserTaskTypes": {
      "type": {
        "ref": "array",
        "args": [
          {
            "ref": "string",
            "args": [],
            "shared": null,
            "nullable": true
          }
        ],
        "shared": null,
        "nullable": true
      },
      "description": "Return only UserTasks of one of the specified types",
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": null,
      "allowedValues": []
    }
  },
  "enumValues": {},
  "parent": null
}