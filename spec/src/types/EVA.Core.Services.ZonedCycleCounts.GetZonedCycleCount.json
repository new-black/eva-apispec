{
  "typename": "GetZonedCycleCount",
  "assembly": "EVA.Core",
  "description": "Returns a detailed view of a ZonedCycleCount by the ID of its UserTask.\n\nThe response contains:\n\n- Which StockLabels to count (\u0060StockLabelsToCount\u0060)\n- The product that needs to be counted. This product contains all the fields in its \u0060Content\u0060 object that were requested through the \u0060IncludedFields\u0060 property on the request, or a default set of fields if not specified.\n- Which StockMutations have been created since the first pre-count (if any) per StockLabel (\u0060StockMutationsSincePreCount\u0060)\n- A list of all pre-counts, complete with the zone that needs to be counted, the user who did the count (if the count already happened) and a list of count results per StockLabel\n- A list of pre-counted quantityies per StockLabel (\u0060PreCountedQuantities\u0060)\n- A list of the total quantity of stock mutated per StockLabel (a summary of \u0060StockMutationsSincePreCount\u0060).\n- The current stock per StockLabel\n- ExpectedPreCountedQuantity: This is stored on the ZonedCyleCount the moment the last pre-count has been completed, and is a sum of the expected Stock at that moment.\n- PreCountedQuantity: The quantity that was actually counted in all pre-counts over all StockLabels. This is recorded when all pre-counts have been completed.",
  "usage": {
    "request": true,
    "response": false
  },
  "enumIsFlag": null,
  "typeArguments": [],
  "typeDependencies": [
    "EVA.Core.RequestMessage\u00601",
    "EVA.Core.Services.ZonedCycleCounts.GetZonedCycleCountResponse"
  ],
  "extends": {
    "ref": "EVA.Core.RequestMessage\u00601",
    "args": [
      {
        "ref": "EVA.Core.Services.ZonedCycleCounts.GetZonedCycleCountResponse",
        "args": [],
        "shared": null,
        "nullable": true
      }
    ],
    "shared": null,
    "nullable": false
  },
  "properties": {
    "ID": {
      "type": {
        "ref": "id",
        "args": [],
        "shared": null,
        "nullable": false
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": {
        "name": "UserTask",
        "lenient": false,
        "supportsCustomID": false,
        "supportsSystemID": false,
        "isEvaID": true,
        "isExternalID": false
      },
      "allowedValues": []
    },
    "IncludedFields": {
      "type": {
        "ref": "array",
        "args": [
          {
            "ref": "string",
            "args": [],
            "shared": null,
            "nullable": true
          }
        ],
        "shared": null,
        "nullable": true
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "stringRegexConstraint": null,
      "datamodel": {
        "name": "ProductPropertyType",
        "lenient": false,
        "supportsCustomID": false,
        "supportsSystemID": false,
        "isEvaID": true,
        "isExternalID": false
      },
      "allowedValues": []
    }
  },
  "enumValues": {},
  "parent": null
}